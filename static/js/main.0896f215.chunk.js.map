{"version":3,"sources":["chart.js","App.js","index.js"],"names":["Chart","props","data","options","App","state","lineChartData","labels","datasets","type","label","backgroundColor","borderColor","theme","palette","primary","main","borderWidth","lineTension","lineChartOptions","responsive","maintainAspectRatio","tooltips","enabled","scales","xAxes","ticks","autoSkip","maxTicksLimit","subscribe","channels","name","product_ids","this","ws","WebSocket","onopen","send","JSON","stringify","onmessage","e","value","parse","oldBtcDataSet","newBtcDataSet","push","price","newChartData","concat","Date","toLocaleTimeString","setState","close","classes","className","React","Component","withStyles","height","withTheme","createMuiTheme","ReactDOM","render","document","getElementById"],"mappings":"gOAKeA,EAFD,SAAAC,GAAK,OAAI,kBAAC,IAAD,CAAMC,KAAMD,EAAMC,KAAMC,QAASF,EAAME,WCSxDC,E,4MACJC,MAAQ,CACNC,cAAe,CACbC,OAAQ,GACRC,SAAU,CACR,CACEC,KAAM,OACNC,MAAO,UACPC,gBAAiB,0BACjBC,YAAa,EAAKX,MAAMY,MAAMC,QAAQC,QAAQC,KAC9CC,YAAa,IACbC,YAAa,IACbhB,KAAM,MAIZiB,iBAAkB,CAChBC,YAAY,EACZC,qBAAqB,EACrBC,SAAU,CACRC,SAAS,GAEXC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,UAAU,EACVC,cAAe,S,kEAQN,IAAD,OACZC,EAAY,CAChBpB,KAAM,YACNqB,SAAU,CACR,CACEC,KAAM,SACNC,YAAa,CAAC,cAKpBC,KAAKC,GAAK,IAAIC,UAAU,kCAExBF,KAAKC,GAAGE,OAAS,WACf,EAAKF,GAAGG,KAAKC,KAAKC,UAAUV,KAG9BI,KAAKC,GAAGM,UAAY,SAAAC,GAClB,IAAMC,EAAQJ,KAAKK,MAAMF,EAAEvC,MAC3B,GAAmB,WAAfwC,EAAMjC,KAAV,CAIA,IAAMmC,EAAgB,EAAKvC,MAAMC,cAAcE,SAAS,GAClDqC,EAAa,eAAQD,GAC3BC,EAAc3C,KAAK4C,KAAKJ,EAAMK,OAE9B,IAAMC,EAAY,eACb,EAAK3C,MAAMC,cADE,CAEhBE,SAAU,CAACqC,GACXtC,OAAQ,EAAKF,MAAMC,cAAcC,OAAO0C,QACtC,IAAIC,MAAOC,wBAGf,EAAKC,SAAS,CAAE9C,cAAe0C,Q,6CAKjCf,KAAKC,GAAGmB,U,+BAGA,IACAC,EAAYrB,KAAKhC,MAAjBqD,QAER,OACE,yBAAKC,UAAWD,EAAQ,oBACtB,kBAAC,EAAD,CACEpD,KAAM+B,KAAK5B,MAAMC,cACjBH,QAAS8B,KAAK5B,MAAMc,wB,GApFZqC,IAAMC,WA2FTC,eAjGA,SAAA7C,GAAK,MAAK,CACvB,kBAAmB,CACjB8C,OAAQ,QA+FsB,CAAEC,WAAW,GAAhCF,CAAwCtD,GCjGjDS,EAAQgD,cAEdC,IAASC,OACP,kBAAC,IAAD,CAAkBlD,MAAOA,GACvB,kBAAC,EAAD,OAEFmD,SAASC,eAAe,U","file":"static/js/main.0896f215.chunk.js","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst Chart = props => <Line data={props.data} options={props.options} />;\n\nexport default Chart;","\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chart from \"./chart\";\n\nconst styles = theme => ({\n  \"chart-container\": {\n    height: 400\n  }\n});\n\nclass App extends React.Component {\n  state = {\n    lineChartData: {\n      labels: [],\n      datasets: [\n        {\n          type: \"line\",\n          label: \"BTC-USD\",\n          backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n          borderColor: this.props.theme.palette.primary.main,\n          borderWidth: \"2\",\n          lineTension: 0.45,\n          data: []\n        }\n      ]\n    },\n    lineChartOptions: {\n      responsive: true,\n      maintainAspectRatio: false,\n      tooltips: {\n        enabled: true\n      },\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 10\n            }\n          }\n        ]\n      }\n    }\n  };\n\n  componentDidMount() {\n    const subscribe = {\n      type: \"subscribe\",\n      channels: [\n        {\n          name: \"ticker\",\n          product_ids: [\"BTC-USD\"]\n        }\n      ]\n    };\n\n    this.ws = new WebSocket(\"wss://ws-feed.pro.coinbase.com\");\n\n    this.ws.onopen = () => {\n      this.ws.send(JSON.stringify(subscribe));\n    };\n\n    this.ws.onmessage = e => {\n      const value = JSON.parse(e.data);\n      if (value.type !== \"ticker\") {\n        return;\n      }\n\n      const oldBtcDataSet = this.state.lineChartData.datasets[0];\n      const newBtcDataSet = { ...oldBtcDataSet };\n      newBtcDataSet.data.push(value.price);\n\n      const newChartData = {\n        ...this.state.lineChartData,\n        datasets: [newBtcDataSet],\n        labels: this.state.lineChartData.labels.concat(\n          new Date().toLocaleTimeString()\n        )\n      };\n      this.setState({ lineChartData: newChartData });\n    };\n  }\n\n  componentWillUnmount() {\n    this.ws.close();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes[\"chart-container\"]}>\n        <Chart\n          data={this.state.lineChartData}\n          options={this.state.lineChartOptions}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport App from './App';\n\n\nconst theme = createMuiTheme();\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App/>\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")   \n);\n"],"sourceRoot":""}